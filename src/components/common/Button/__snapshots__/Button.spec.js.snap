// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    className={null}
    disabled={false}
    height={null}
    isCallToAction={null}
    onClick={null}
    small={false}
    type="button"
    width={null}
  >
    Text
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "Text",
      "className": null,
      "data-test": "Button",
      "disabled": false,
      "height": null,
      "isCallToAction": null,
      "onClick": null,
      "opacity": undefined,
      "small": false,
      "type": "button",
      "width": null,
    },
    "ref": null,
    "rendered": "Text",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  background: white;
  border-radius: ",
          "0.25rem",
          ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
          "0.75rem",
          ";
  letter-spacing: ",
          "0.0125rem",
          ";
  line-height: ",
          "2.8125rem",
          ";
  outline: none;
  padding: 0 ",
          "1.25rem",
          ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  user-select: none;
  opacity: ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          "
    @media (min-width: ",
          "62rem",
          ") {
      ",
          "
    width: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";

  ",
          "
    @media (min-width: ",
          "73.6875rem",
          ") {
      ",
          "
    font-size: ",
          "0.8125rem",
          ";
    padding: 0 ",
          "1.75rem",
          ";
    line-height: ",
          "3rem",
          ";
    padding: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";


  :active {
    transform: translateY(",
          "0.0625rem",
          ");
  }

  ",
          [Function],
          ";

  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
",
        ],
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Text",
        "className": null,
        "data-test": "Button",
        "disabled": false,
        "height": null,
        "isCallToAction": null,
        "onClick": null,
        "opacity": undefined,
        "small": false,
        "type": "button",
        "width": null,
      },
      "ref": null,
      "rendered": "Text",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "rules": Array [
            "
  background: white;
  border-radius: ",
            "0.25rem",
            ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
            "0.75rem",
            ";
  letter-spacing: ",
            "0.0125rem",
            ";
  line-height: ",
            "2.8125rem",
            ";
  outline: none;
  padding: 0 ",
            "1.25rem",
            ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  user-select: none;
  opacity: ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            "
    @media (min-width: ",
            "62rem",
            ") {
      ",
            "
    width: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";

  ",
            "
    @media (min-width: ",
            "73.6875rem",
            ") {
      ",
            "
    font-size: ",
            "0.8125rem",
            ";
    padding: 0 ",
            "1.75rem",
            ";
    line-height: ",
            "3rem",
            ";
    padding: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";


  :active {
    transform: translateY(",
            "0.0625rem",
            ");
  }

  ",
            [Function],
            ";

  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
",
          ],
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`Button component should render an "button" tag 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    className={null}
    disabled={false}
    height={null}
    isCallToAction={null}
    onClick={null}
    small={false}
    type="button"
    width={null}
  >
    Text
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "Text",
      "className": null,
      "data-test": "Button",
      "disabled": false,
      "height": null,
      "isCallToAction": null,
      "onClick": null,
      "opacity": undefined,
      "small": false,
      "type": "button",
      "width": null,
    },
    "ref": null,
    "rendered": "Text",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  background: white;
  border-radius: ",
          "0.25rem",
          ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
          "0.75rem",
          ";
  letter-spacing: ",
          "0.0125rem",
          ";
  line-height: ",
          "2.8125rem",
          ";
  outline: none;
  padding: 0 ",
          "1.25rem",
          ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  user-select: none;
  opacity: ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          "
    @media (min-width: ",
          "62rem",
          ") {
      ",
          "
    width: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";

  ",
          "
    @media (min-width: ",
          "73.6875rem",
          ") {
      ",
          "
    font-size: ",
          "0.8125rem",
          ";
    padding: 0 ",
          "1.75rem",
          ";
    line-height: ",
          "3rem",
          ";
    padding: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";


  :active {
    transform: translateY(",
          "0.0625rem",
          ");
  }

  ",
          [Function],
          ";

  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
",
        ],
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Text",
        "className": null,
        "data-test": "Button",
        "disabled": false,
        "height": null,
        "isCallToAction": null,
        "onClick": null,
        "opacity": undefined,
        "small": false,
        "type": "button",
        "width": null,
      },
      "ref": null,
      "rendered": "Text",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "rules": Array [
            "
  background: white;
  border-radius: ",
            "0.25rem",
            ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
            "0.75rem",
            ";
  letter-spacing: ",
            "0.0125rem",
            ";
  line-height: ",
            "2.8125rem",
            ";
  outline: none;
  padding: 0 ",
            "1.25rem",
            ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  user-select: none;
  opacity: ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            "
    @media (min-width: ",
            "62rem",
            ") {
      ",
            "
    width: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";

  ",
            "
    @media (min-width: ",
            "73.6875rem",
            ") {
      ",
            "
    font-size: ",
            "0.8125rem",
            ";
    padding: 0 ",
            "1.75rem",
            ";
    line-height: ",
            "3rem",
            ";
    padding: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";


  :active {
    transform: translateY(",
            "0.0625rem",
            ");
  }

  ",
            [Function],
            ";

  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
",
          ],
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`Button component should render different types 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    className={null}
    disabled={false}
    height={null}
    isCallToAction={null}
    onClick={null}
    small={false}
    type="submit"
    width={null}
  >
    Text
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "Text",
      "className": null,
      "data-test": "Button",
      "disabled": false,
      "height": null,
      "isCallToAction": null,
      "onClick": null,
      "opacity": undefined,
      "small": false,
      "type": "submit",
      "width": null,
    },
    "ref": null,
    "rendered": "Text",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "lastClassName": "kMkgpL",
        "rules": Array [
          "
  background: white;
  border-radius: ",
          "0.25rem",
          ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
          "0.75rem",
          ";
  letter-spacing: ",
          "0.0125rem",
          ";
  line-height: ",
          "2.8125rem",
          ";
  outline: none;
  padding: 0 ",
          "1.25rem",
          ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  user-select: none;
  opacity: ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          "
    @media (min-width: ",
          "62rem",
          ") {
      ",
          "
    width: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";

  ",
          "
    @media (min-width: ",
          "73.6875rem",
          ") {
      ",
          "
    font-size: ",
          "0.8125rem",
          ";
    padding: 0 ",
          "1.75rem",
          ";
    line-height: ",
          "3rem",
          ";
    padding: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";


  :active {
    transform: translateY(",
          "0.0625rem",
          ");
  }

  ",
          [Function],
          ";

  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
",
        ],
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Text",
        "className": null,
        "data-test": "Button",
        "disabled": false,
        "height": null,
        "isCallToAction": null,
        "onClick": null,
        "opacity": undefined,
        "small": false,
        "type": "submit",
        "width": null,
      },
      "ref": null,
      "rendered": "Text",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "kMkgpL",
          "rules": Array [
            "
  background: white;
  border-radius: ",
            "0.25rem",
            ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
            "0.75rem",
            ";
  letter-spacing: ",
            "0.0125rem",
            ";
  line-height: ",
            "2.8125rem",
            ";
  outline: none;
  padding: 0 ",
            "1.25rem",
            ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  user-select: none;
  opacity: ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            "
    @media (min-width: ",
            "62rem",
            ") {
      ",
            "
    width: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";

  ",
            "
    @media (min-width: ",
            "73.6875rem",
            ") {
      ",
            "
    font-size: ",
            "0.8125rem",
            ";
    padding: 0 ",
            "1.75rem",
            ";
    line-height: ",
            "3rem",
            ";
    padding: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";


  :active {
    transform: translateY(",
            "0.0625rem",
            ");
  }

  ",
            [Function],
            ";

  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
",
          ],
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`Button component should render different width 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    className={null}
    disabled={false}
    height={null}
    isCallToAction={null}
    onClick={null}
    small={false}
    type="button"
    width="100"
  >
    Text
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "Text",
      "className": null,
      "data-test": "Button",
      "disabled": false,
      "height": null,
      "isCallToAction": null,
      "onClick": null,
      "opacity": undefined,
      "small": false,
      "type": "button",
      "width": "100",
    },
    "ref": null,
    "rendered": "Text",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "lastClassName": "kMkgpL",
        "rules": Array [
          "
  background: white;
  border-radius: ",
          "0.25rem",
          ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
          "0.75rem",
          ";
  letter-spacing: ",
          "0.0125rem",
          ";
  line-height: ",
          "2.8125rem",
          ";
  outline: none;
  padding: 0 ",
          "1.25rem",
          ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  user-select: none;
  opacity: ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          "
    @media (min-width: ",
          "62rem",
          ") {
      ",
          "
    width: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";

  ",
          "
    @media (min-width: ",
          "73.6875rem",
          ") {
      ",
          "
    font-size: ",
          "0.8125rem",
          ";
    padding: 0 ",
          "1.75rem",
          ";
    line-height: ",
          "3rem",
          ";
    padding: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";


  :active {
    transform: translateY(",
          "0.0625rem",
          ");
  }

  ",
          [Function],
          ";

  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
",
        ],
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Text",
        "className": null,
        "data-test": "Button",
        "disabled": false,
        "height": null,
        "isCallToAction": null,
        "onClick": null,
        "opacity": undefined,
        "small": false,
        "type": "button",
        "width": "100",
      },
      "ref": null,
      "rendered": "Text",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "kMkgpL",
          "rules": Array [
            "
  background: white;
  border-radius: ",
            "0.25rem",
            ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
            "0.75rem",
            ";
  letter-spacing: ",
            "0.0125rem",
            ";
  line-height: ",
            "2.8125rem",
            ";
  outline: none;
  padding: 0 ",
            "1.25rem",
            ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  user-select: none;
  opacity: ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            "
    @media (min-width: ",
            "62rem",
            ") {
      ",
            "
    width: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";

  ",
            "
    @media (min-width: ",
            "73.6875rem",
            ") {
      ",
            "
    font-size: ",
            "0.8125rem",
            ";
    padding: 0 ",
            "1.75rem",
            ";
    line-height: ",
            "3rem",
            ";
    padding: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";


  :active {
    transform: translateY(",
            "0.0625rem",
            ");
  }

  ",
            [Function],
            ";

  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
",
          ],
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`Button component should render disabled class when disabled is truthy 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    className={null}
    disabled={true}
    height={null}
    isCallToAction={null}
    onClick={null}
    small={false}
    type="button"
    width={null}
  >
    Text
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "Text",
      "className": null,
      "data-test": "Button",
      "disabled": true,
      "height": null,
      "isCallToAction": null,
      "onClick": null,
      "opacity": undefined,
      "small": false,
      "type": "button",
      "width": null,
    },
    "ref": null,
    "rendered": "Text",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "lastClassName": "kMkgpL",
        "rules": Array [
          "
  background: white;
  border-radius: ",
          "0.25rem",
          ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
          "0.75rem",
          ";
  letter-spacing: ",
          "0.0125rem",
          ";
  line-height: ",
          "2.8125rem",
          ";
  outline: none;
  padding: 0 ",
          "1.25rem",
          ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  user-select: none;
  opacity: ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          "
    @media (min-width: ",
          "62rem",
          ") {
      ",
          "
    width: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";

  ",
          "
    @media (min-width: ",
          "73.6875rem",
          ") {
      ",
          "
    font-size: ",
          "0.8125rem",
          ";
    padding: 0 ",
          "1.75rem",
          ";
    line-height: ",
          "3rem",
          ";
    padding: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";


  :active {
    transform: translateY(",
          "0.0625rem",
          ");
  }

  ",
          [Function],
          ";

  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
",
        ],
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Text",
        "className": null,
        "data-test": "Button",
        "disabled": true,
        "height": null,
        "isCallToAction": null,
        "onClick": null,
        "opacity": undefined,
        "small": false,
        "type": "button",
        "width": null,
      },
      "ref": null,
      "rendered": "Text",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "kMkgpL",
          "rules": Array [
            "
  background: white;
  border-radius: ",
            "0.25rem",
            ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
            "0.75rem",
            ";
  letter-spacing: ",
            "0.0125rem",
            ";
  line-height: ",
            "2.8125rem",
            ";
  outline: none;
  padding: 0 ",
            "1.25rem",
            ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  user-select: none;
  opacity: ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            "
    @media (min-width: ",
            "62rem",
            ") {
      ",
            "
    width: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";

  ",
            "
    @media (min-width: ",
            "73.6875rem",
            ") {
      ",
            "
    font-size: ",
            "0.8125rem",
            ";
    padding: 0 ",
            "1.75rem",
            ";
    line-height: ",
            "3rem",
            ";
    padding: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";


  :active {
    transform: translateY(",
            "0.0625rem",
            ");
  }

  ",
            [Function],
            ";

  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
",
          ],
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`Button component should render highlighted class when isCallToAction is truthy 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    className={null}
    disabled={false}
    height={null}
    isCallToAction={true}
    onClick={null}
    small={false}
    type="button"
    width={null}
  >
    Text
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "Text",
      "className": null,
      "data-test": "Button",
      "disabled": false,
      "height": null,
      "isCallToAction": true,
      "onClick": null,
      "opacity": undefined,
      "small": false,
      "type": "button",
      "width": null,
    },
    "ref": null,
    "rendered": "Text",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "lastClassName": "kMkgpL",
        "rules": Array [
          "
  background: white;
  border-radius: ",
          "0.25rem",
          ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
          "0.75rem",
          ";
  letter-spacing: ",
          "0.0125rem",
          ";
  line-height: ",
          "2.8125rem",
          ";
  outline: none;
  padding: 0 ",
          "1.25rem",
          ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
          [Function],
          ";
  height: ",
          [Function],
          ";
  user-select: none;
  opacity: ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          "
    @media (min-width: ",
          "62rem",
          ") {
      ",
          "
    width: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";

  ",
          "
    @media (min-width: ",
          "73.6875rem",
          ") {
      ",
          "
    font-size: ",
          "0.8125rem",
          ";
    padding: 0 ",
          "1.75rem",
          ";
    line-height: ",
          "3rem",
          ";
    padding: ",
          [Function],
          ";
  ",
          ";
    }
  ",
          ";


  :active {
    transform: translateY(",
          "0.0625rem",
          ");
  }

  ",
          [Function],
          ";

  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
",
        ],
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Text",
        "className": null,
        "data-test": "Button",
        "disabled": false,
        "height": null,
        "isCallToAction": true,
        "onClick": null,
        "opacity": undefined,
        "small": false,
        "type": "button",
        "width": null,
      },
      "ref": null,
      "rendered": "Text",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "kMkgpL",
          "rules": Array [
            "
  background: white;
  border-radius: ",
            "0.25rem",
            ";
  border: 0;
  cursor: pointer;
  display: inline-block;
  font-size: ",
            "0.75rem",
            ";
  letter-spacing: ",
            "0.0125rem",
            ";
  line-height: ",
            "2.8125rem",
            ";
  outline: none;
  padding: 0 ",
            "1.25rem",
            ";
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease-in-out color, 0.2s ease-in-out background,
    0.2s ease-in-out box-shadow, 0.2s ease-in-out border, 0.1s transform;
  white-space: nowrap;
  width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  user-select: none;
  opacity: ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            "
    @media (min-width: ",
            "62rem",
            ") {
      ",
            "
    width: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";

  ",
            "
    @media (min-width: ",
            "73.6875rem",
            ") {
      ",
            "
    font-size: ",
            "0.8125rem",
            ";
    padding: 0 ",
            "1.75rem",
            ";
    line-height: ",
            "3rem",
            ";
    padding: ",
            [Function],
            ";
  ",
            ";
    }
  ",
            ";


  :active {
    transform: translateY(",
            "0.0625rem",
            ");
  }

  ",
            [Function],
            ";

  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
  ",
            [Function],
            ";

  ",
            [Function],
            ";
",
          ],
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
